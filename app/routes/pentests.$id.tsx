import { json, type MetaFunction } from "@remix-run/node";
import { authenticator } from "@/lib/auth.server";
import { useLoaderData } from "@remix-run/react";
import Shell from "@/components/layout/Shell";
import prisma from "@/lib/prisma";

export const meta: MetaFunction = () => {
  return [
    { title: "Seuthes" },
    { name: "description", content: "Welcome to Remix!" },
  ];
};

export default function Pentest() {
  const data = useLoaderData<typeof loader>();
  console.log(data);
  return (
    <Shell heading={`${data.pentest?.scope.name} - ${data.pentest?.date}`}>
      {data.pentest?.report ? (
        <iframe
          src={data.pentest?.report}
          className="w-full h-full"
          title="Pentest Report"
        />
      ) : (
        <p>No report yet</p>
      )}
    </Shell>
  );
}

export async function loader({ request, params }) {
  const user = await authenticator.isAuthenticated(request, {
    failureRedirect: "/auth/login",
  });

  const pentest = await prisma.pentest.findUnique({
    where: { id: params.id },
    include: {
      scope: true,
    },
  });

  return json({ user, pentest });
}
